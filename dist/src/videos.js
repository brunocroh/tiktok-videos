import { v4 as uuidv4 } from 'uuid';
import fs from 'fs';
import { createAudio } from './lib/text-to-speech.js';
import { createVideo as ffmpegCreateVideo } from './lib/ffmpeg.js';
import { getPrompt } from './lib/chatgpt.js';
import createImageText from './lib/canva.js';
export async function createVideo(theme) {
    const folder = createFolder();
    let lines = [];
    const prompt = await getPrompt(theme);
    if (!prompt)
        throw new Error('Chatgpt not generated right prompt');
    console.log(prompt);
    lines.push(prompt.title);
    lines = lines.concat(prompt.texts);
    let startTime = 0;
    let audios = await Promise.all(lines.map(async (l, i) => {
        const image = createImageText(l, `${folder}/tmp/${i}`);
        const audio = await createAudio(l, `${folder}/tmp/${i}`);
        return {
            ...audio,
            text: l,
            image,
            i,
        };
    }));
    audios = audios.map((a) => {
        const st = startTime;
        startTime = Math.floor(startTime + Math.round(a.duration));
        return {
            ...a,
            duration: Math.round(a.duration),
            startTime: st,
        };
    });
    const duration = audios.reduce((agg, audio) => agg + audio.duration, 0);
    ffmpegCreateVideo({
        audios,
        duration,
    });
}
function createFolder() {
    const uuid = uuidv4();
    const folderName = `./output/videos/${uuid}`;
    fs.mkdirSync(`${folderName}/tmp`, {
        recursive: true,
    });
    return folderName;
}
function deleteFolder(folderName) {
    return fs.rmdirSync(folderName);
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidmlkZW9zLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vc3JjL3ZpZGVvcy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsRUFBRSxJQUFJLE1BQU0sRUFBRSxNQUFNLE1BQU0sQ0FBQztBQUNwQyxPQUFPLEVBQUUsTUFBTSxJQUFJLENBQUM7QUFDcEIsT0FBTyxFQUFFLFdBQVcsRUFBRSxNQUFNLHlCQUF5QixDQUFDO0FBQ3RELE9BQU8sRUFBRSxXQUFXLElBQUksaUJBQWlCLEVBQUUsTUFBTSxpQkFBaUIsQ0FBQztBQUNuRSxPQUFPLEVBQUUsU0FBUyxFQUFFLE1BQU0sa0JBQWtCLENBQUM7QUFDN0MsT0FBTyxlQUFlLE1BQU0sZ0JBQWdCLENBQUM7QUFFN0MsTUFBTSxDQUFDLEtBQUssVUFBVSxXQUFXLENBQUMsS0FBYTtJQUM3QyxNQUFNLE1BQU0sR0FBRyxZQUFZLEVBQUUsQ0FBQztJQUM5QixJQUFJLEtBQUssR0FBUSxFQUFFLENBQUM7SUFDcEIsTUFBTSxNQUFNLEdBQUcsTUFBTSxTQUFTLENBQUMsS0FBSyxDQUFDLENBQUM7SUFFdEMsSUFBSSxDQUFDLE1BQU07UUFBRSxNQUFNLElBQUksS0FBSyxDQUFDLG9DQUFvQyxDQUFDLENBQUM7SUFFbkUsT0FBTyxDQUFDLEdBQUcsQ0FBQyxNQUFNLENBQUMsQ0FBQztJQUVwQixLQUFLLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxLQUFLLENBQUMsQ0FBQztJQUN6QixLQUFLLEdBQUcsS0FBSyxDQUFDLE1BQU0sQ0FBQyxNQUFNLENBQUMsS0FBSyxDQUFDLENBQUM7SUFDbkMsSUFBSSxTQUFTLEdBQUcsQ0FBQyxDQUFDO0lBRWxCLElBQUksTUFBTSxHQUFHLE1BQU0sT0FBTyxDQUFDLEdBQUcsQ0FDNUIsS0FBSyxDQUFDLEdBQUcsQ0FBQyxLQUFLLEVBQUUsQ0FBUyxFQUFFLENBQVMsRUFBRSxFQUFFO1FBQ3ZDLE1BQU0sS0FBSyxHQUFHLGVBQWUsQ0FBQyxDQUFDLEVBQUUsR0FBRyxNQUFNLFFBQVEsQ0FBQyxFQUFFLENBQUMsQ0FBQztRQUN2RCxNQUFNLEtBQUssR0FBRyxNQUFNLFdBQVcsQ0FBQyxDQUFDLEVBQUUsR0FBRyxNQUFNLFFBQVEsQ0FBQyxFQUFFLENBQUMsQ0FBQztRQUN6RCxPQUFPO1lBQ0wsR0FBRyxLQUFLO1lBQ1IsSUFBSSxFQUFFLENBQUM7WUFDUCxLQUFLO1lBQ0wsQ0FBQztTQUNGLENBQUM7SUFDSixDQUFDLENBQUMsQ0FDSCxDQUFDO0lBRUYsTUFBTSxHQUFHLE1BQU0sQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFNLEVBQUUsRUFBRTtRQUM3QixNQUFNLEVBQUUsR0FBRyxTQUFTLENBQUM7UUFDckIsU0FBUyxHQUFHLElBQUksQ0FBQyxLQUFLLENBQUMsU0FBUyxHQUFHLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLFFBQVEsQ0FBQyxDQUFDLENBQUM7UUFFM0QsT0FBTztZQUNMLEdBQUcsQ0FBQztZQUNKLFFBQVEsRUFBRSxJQUFJLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQyxRQUFRLENBQUM7WUFDaEMsU0FBUyxFQUFFLEVBQUU7U0FDZCxDQUFDO0lBQ0osQ0FBQyxDQUFDLENBQUM7SUFFSCxNQUFNLFFBQVEsR0FBRyxNQUFNLENBQUMsTUFBTSxDQUFDLENBQUMsR0FBRyxFQUFFLEtBQUssRUFBRSxFQUFFLENBQUMsR0FBRyxHQUFHLEtBQUssQ0FBQyxRQUFRLEVBQUUsQ0FBQyxDQUFDLENBQUM7SUFFeEUsaUJBQWlCLENBQUM7UUFDaEIsTUFBTTtRQUNOLFFBQVE7S0FDVCxDQUFDLENBQUM7QUFDTCxDQUFDO0FBRUQsU0FBUyxZQUFZO0lBQ25CLE1BQU0sSUFBSSxHQUFHLE1BQU0sRUFBRSxDQUFDO0lBQ3RCLE1BQU0sVUFBVSxHQUFHLG1CQUFtQixJQUFJLEVBQUUsQ0FBQztJQUM3QyxFQUFFLENBQUMsU0FBUyxDQUFDLEdBQUcsVUFBVSxNQUFNLEVBQUU7UUFDaEMsU0FBUyxFQUFFLElBQUk7S0FDaEIsQ0FBQyxDQUFDO0lBQ0gsT0FBTyxVQUFVLENBQUM7QUFDcEIsQ0FBQztBQUVELFNBQVMsWUFBWSxDQUFDLFVBQWtCO0lBQ3RDLE9BQU8sRUFBRSxDQUFDLFNBQVMsQ0FBQyxVQUFVLENBQUMsQ0FBQztBQUNsQyxDQUFDIn0=